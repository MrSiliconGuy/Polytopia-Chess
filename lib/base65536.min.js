const Base65536 = (function () {
    for (
        var h = function (b) {
                for (var a = [], c = 0; c < b.length; ) {
                    var d = b.charCodeAt(c);
                    c++;
                    if (55296 <= d && 56320 > d) {
                        var e = b.charCodeAt(c);
                        c++;
                        if (56320 <= e && 57344 > e) a.push(1024 * (d - 55296) + (e - 56320) + 65536);
                        else throw Error("Invalid UTF-16");
                    } else a.push(d);
                }
                return a;
            },
            n = function (b) {
                return b
                    .map(function (a) {
                        if (65536 > a) return String.fromCharCode(a);
                        var c = 56320 + (a % 1024);
                        return String.fromCharCode(55296 + (a - 65536) / 1024) + String.fromCharCode(c);
                    })
                    .join("");
            },
            k = h("\u1500")[0],
            l = h(
                "\u3400\u3500\u3600\u3700\u3800\u3900\u3a00\u3b00\u3c00\u3d00\u3e00\u3f00\u4000\u4100\u4200\u4300\u4400\u4500\u4600\u4700\u4800\u4900\u4a00\u4b00\u4c00\u4e00\u4f00\u5000\u5100\u5200\u5300\u5400\u5500\u5600\u5700\u5800\u5900\u5a00\u5b00\u5c00\u5d00\u5e00\u5f00\u6000\u6100\u6200\u6300\u6400\u6500\u6600\u6700\u6800\u6900\u6a00\u6b00\u6c00\u6d00\u6e00\u6f00\u7000\u7100\u7200\u7300\u7400\u7500\u7600\u7700\u7800\u7900\u7a00\u7b00\u7c00\u7d00\u7e00\u7f00\u8000\u8100\u8200\u8300\u8400\u8500\u8600\u8700\u8800\u8900\u8a00\u8b00\u8c00\u8d00\u8e00\u8f00\u9000\u9100\u9200\u9300\u9400\u9500\u9600\u9700\u9800\u9900\u9a00\u9b00\u9c00\u9d00\u9e00\ua100\ua200\ua300\ua500\ud801\ude00\ud808\udc00\ud808\udd00\ud808\ude00\ud80c\udc00\ud80c\udd00\ud80c\ude00\ud80c\udf00\ud811\udc00\ud811\udd00\ud81a\udc00\ud81a\udd00\ud840\udc00\ud840\udd00\ud840\ude00\ud840\udf00\ud841\udc00\ud841\udd00\ud841\ude00\ud841\udf00\ud842\udc00\ud842\udd00\ud842\ude00\ud842\udf00\ud843\udc00\ud843\udd00\ud843\ude00\ud843\udf00\ud844\udc00\ud844\udd00\ud844\ude00\ud844\udf00\ud845\udc00\ud845\udd00\ud845\ude00\ud845\udf00\ud846\udc00\ud846\udd00\ud846\ude00\ud846\udf00\ud847\udc00\ud847\udd00\ud847\ude00\ud847\udf00\ud848\udc00\ud848\udd00\ud848\ude00\ud848\udf00\ud849\udc00\ud849\udd00\ud849\ude00\ud849\udf00\ud84a\udc00\ud84a\udd00\ud84a\ude00\ud84a\udf00\ud84b\udc00\ud84b\udd00\ud84b\ude00\ud84b\udf00\ud84c\udc00\ud84c\udd00\ud84c\ude00\ud84c\udf00\ud84d\udc00\ud84d\udd00\ud84d\ude00\ud84d\udf00\ud84e\udc00\ud84e\udd00\ud84e\ude00\ud84e\udf00\ud84f\udc00\ud84f\udd00\ud84f\ude00\ud84f\udf00\ud850\udc00\ud850\udd00\ud850\ude00\ud850\udf00\ud851\udc00\ud851\udd00\ud851\ude00\ud851\udf00\ud852\udc00\ud852\udd00\ud852\ude00\ud852\udf00\ud853\udc00\ud853\udd00\ud853\ude00\ud853\udf00\ud854\udc00\ud854\udd00\ud854\ude00\ud854\udf00\ud855\udc00\ud855\udd00\ud855\ude00\ud855\udf00\ud856\udc00\ud856\udd00\ud856\ude00\ud856\udf00\ud857\udc00\ud857\udd00\ud857\ude00\ud857\udf00\ud858\udc00\ud858\udd00\ud858\ude00\ud858\udf00\ud859\udc00\ud859\udd00\ud859\ude00\ud859\udf00\ud85a\udc00\ud85a\udd00\ud85a\ude00\ud85a\udf00\ud85b\udc00\ud85b\udd00\ud85b\ude00\ud85b\udf00\ud85c\udc00\ud85c\udd00\ud85c\ude00\ud85c\udf00\ud85d\udc00\ud85d\udd00\ud85d\ude00\ud85d\udf00\ud85e\udc00\ud85e\udd00\ud85e\ude00\ud85e\udf00\ud85f\udc00\ud85f\udd00\ud85f\ude00\ud85f\udf00\ud860\udc00\ud860\udd00\ud860\ude00\ud860\udf00\ud861\udc00\ud861\udd00"
            ),
            m = {},
            g = 0;
        256 > g;
        g++
    )
        m[l[g]] = g;
    return {
        encode: function (b, a) {
            void 0 === a && (a = Infinity);
            for (var c = new Uint8Array(b), d, e = [], f = 0; f < c.length; f++) void 0 === d ? (d = c[f]) : (e.push(l[c[f]] + d), (d = void 0));
            void 0 !== d && e.push(k + d);
            for (f = a; f < e.length; f += a + 1) e.splice(f, 0, 10);
            return n(e);
        },
        decode: function (b, a) {
            void 0 === a && (a = !1);
            var c = !1,
                d = [];
            h(b).forEach(function (e) {
                var f = e & 255,
                    b = e - f;
                if (b === k) {
                    if (c) throw Error("Base65536 sequence continued after final byte");
                    d.push(f);
                    c = !0;
                } else if (((b = m[b]), void 0 !== b)) {
                    if (c) throw Error("Base65536 sequence continued after final byte");
                    d.push(f, b);
                } else if (!a) throw Error("Not a valid Base65536 code point: " + String(e));
            });
            return new Uint8Array(d).buffer;
        },
    };
})();
